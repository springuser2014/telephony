<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<properties>
		<commons-collections.version>3.2.1</commons-collections.version>
	</properties>
	<parent>
		<groupId>org.bitbucket.pawelhenek.telephony</groupId>
		<artifactId>telephony-parent</artifactId>
		<version>0.8</version>
	</parent>
	<artifactId>telephony-core</artifactId>
	<packaging>jar</packaging>
	<name>Telephony core</name>
	<repositories>

		<repository>
			<id>springsource-repo</id>
			<name>SpringSource Repository</name>
			<url>http://repo.springsource.org/release</url>
		</repository>

	</repositories>
	
	<dependencies>
	
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>${commons-collections.version}</version>
		</dependency>
            
		<dependency>
			<groupId>com.jayway.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<version>${awaitility.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>${joda.version}</version>
		</dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>${guice.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.inject.extensions</groupId>
			<artifactId>guice-persist</artifactId>
			<version>${guice.version}</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate-core.version}</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate-core.version}</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-annotations</artifactId>
			<version>${hibernate-core.version}</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate-validator.version}</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<version>${hibernate-jpa-api.version}</version>
		</dependency>

		<dependency>
			<groupId>com.googlecode.flyway</groupId>
			<artifactId>flyway-core</artifactId>
			<version>${flyway.version}</version>
		</dependency>

		<dependency>
			<groupId>com.googlecode.flyway-test-extensions</groupId>
			<artifactId>flyway-dbunit-test</artifactId>
			<version>${flyway.test.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.googlecode.flyway-test-extensions</groupId>
			<artifactId>flyway-spring-test</artifactId>
			<version>${flyway.test.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.googlecode.flyway-test-extensions</groupId>
			<artifactId>flyway-test-sample-spring3</artifactId>
			<version>${flyway.test.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- SLF4J dependencies -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>

		<dependency>
			<groupId>org.jukito</groupId>
			<artifactId>jukito</artifactId>
			<version>${jukito.version}</version>
		</dependency>
		
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>${cglib.version}</version>
			<type>jar</type>
			<optional>true</optional>
		</dependency>
		
		<dependency>
			<groupId>com.thoughtworks.proxytoys</groupId>
			<artifactId>proxytoys</artifactId>
			<version>${proxytoys.version}</version>
			<type>jar</type>
			<optional>true</optional>
		</dependency>
        
        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.1_spec</artifactId>
            <version>1.0.0.Final</version>
        </dependency>

        <dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-starter-remote-shell</artifactId>
        	<version>1.0.0.RELEASE</version>
        </dependency>
        
        <dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-starter-security</artifactId>
        	<version>1.0.0.RELEASE</version>
        </dependency>
        
        <dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-starter-redis</artifactId>
        	<version>1.0.0.RELEASE</version>
        </dependency>
        
	</dependencies>
	
	<build>    
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven.failsafe.plugin.version}</version>
			</plugin>
	
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven.resources.plugin.version}</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
	
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.plugin.version}</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
	
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>					
				<configuration>
					<forkCount>0</forkCount>
		            <reuseForks>false</reuseForks>
					<systemPropertyVariables>
						<environment>TEST</environment>
					</systemPropertyVariables>
					<properties>
						<property>
							<name>listener</name>
							<value>telephony.test.TelephonyCoreTestListener</value>
						</property>
					</properties>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-junit47</artifactId>
						<version>2.15</version>
					</dependency>
				</dependencies>
				<executions>
				   <execution>
			            <id>default-test</id>
			            <phase>test</phase>
			            <goals>
			                <goal>test</goal>
			            </goals>
		           </execution>
				</executions>
			</plugin>
			
			<plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${maven.jacoco.plugin.version}</version>
                
                <executions>
                    <execution>
                        <id>jacoco-initialize</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}\coverage-reports\jacoco-ut.exec</destFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                          <goal>report</goal>
                        </goals>
                        <configuration>
                             <dataFile>${project.build.directory}\coverage-reports\jacoco-ut.exec</dataFile>
                             <outputDirectory>${project.build.directory}\jacoco-ut</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
             </plugin>
             
		</plugins>
		
	</build>

	<reporting>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven.javadoc.plugin.version}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven.checkstyle.plugin.version}</version>
				<configuration>
					<configLocation>../checkstyle.xml</configLocation>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>${maven.findbugs.plugin.version}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${maven.pmd.plugin.version}</version>
				<configuration>
					<linkXref>true</linkXref>
					<sourceEncoding>utf-8</sourceEncoding>
					<minimumTokens>100</minimumTokens>
					<targetJdk>1.6</targetJdk>
					<excludeRoots>
						<excludeRoot>target/</excludeRoot>
					</excludeRoots>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${maven.jacoco.plugin.version}</version>
			     <configuration>
                     <!-- Sets the path to the file which contains the execution data. -->
                     <dataFile>${project.build.directory}\coverage-reports\jacoco-ut.exec</dataFile>
                     <!-- Sets the output directory for the code coverage report. -->
                     <outputDirectory>${project.build.directory}\jacoco-ut</outputDirectory>
                </configuration>
				<reportSets>
	                <reportSet>
	                    <reports>
	                        <report>report</report>
	                    </reports>
	                </reportSet>
	            </reportSets>
			</plugin>
			
		</plugins>

	</reporting>

</project>
                	
